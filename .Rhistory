shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#import data and labels to r using openxlsx
data1 <-  readRDS("FFRS_mapdata_summaries.rds")
write_csv(data1$region,"regionsum.csv")
write_csv(data1$province,"provsum.csv")
write_csv(data1$municity,"citysum.csv")
runApp()
runApp()
runApp()
library(leaflet)
?addLegend()
runApp()
install.packages("leaflet.extras2")
?addPolygons
runApp()
runApp()
?addMapPane()
runApp()
?colorBin
?addTiles
runApp()
runApp()
addSidebyside()
?addSidebyside()
runApp()
runApp()
?addMapPane
runApp()
library(shiny)
library(shinythemes)
library(geojsonio)
library(openxlsx)
library(tidyverse)
library(googledrive)
library(plotly)
library(stringdist)
library(fuzzyjoin)
library(leaflet)
library(htmltools)
library(shinyWidgets)
library(sf)
library(ggridges)
library(DT)
library(leaflet.extras2)
basemaps <- list()
basemaps[["region"]] <-  geojson_read("./phl-admin-psgc-master/phl_regions.geojson", what="sp") %>%
st_as_sf()
basemaps[["province"]] <-  geojson_read("./phl-admin-psgc-master/phl_provinces_ncr-districts_icc.geojson", what="sp") %>%
st_as_sf()
basemaps[["municity"]] <-  geojson_read("./phl-admin-psgc-master/phl_municities.geojson", what="sp") %>%
st_as_sf()
View(data1)
runApp()
library(raster)
data1$region
basemaps$region
View(data1)
View(data1[["region"]])
data1$region %>%
filter(farm_type=="All ecosystem")
basemaps$region
maodata <- basemaps$region %>%
left_join(data1$region %>%
filter(farm_type=="All ecosystem"),
by= c("psgc_region"="psgc.reg"))
bpal <- colorBin(palette = c("firebrick4","#E69F00","#F0E442","#117733","#56B4E9"),
bins = c(0, 50000,150000,300000,450000,Inf),
domain = 0:1000000,
na.color = "transparent",
alpha=0.5)
leaflet(maodata) %>%
addTiles() %>%
addPolygons(layerId = "area",
stroke=TRUE,
fillOpacity = 0.9,
fillColor = ~bpal(area),
color='white',
weight=0.5,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group="area"
)
View(maodata)
bpal <- colorBin(palette = c("firebrick4","#E69F00","#F0E442","#117733","#56B4E9"),
bins = c(0, 50000,150000,300000,450000,Inf),
domain = maodata$area,
na.color = "transparent",
alpha=0.5)
leaflet(maodata) %>%
addTiles() %>%
addPolygons(layerId = "area",
stroke=TRUE,
fillOpacity = 0.9,
fillColor = ~bpal(area),
color='white',
weight=0.5,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group="area"
)
library(sf)
library(shiny)
library(shinythemes)
library(geojsonio)
library(openxlsx)
library(tidyverse)
library(googledrive)
library(plotly)
library(stringdist)
library(fuzzyjoin)
library(leaflet)
library(htmltools)
library(shinyWidgets)
library(ggridges)
library(DT)
library(leaflet.extras2)
#import data and labels to r using openxlsx
data1 <-  readRDS("FFRS_mapdata_summaries.rds")
basemaps <- list()
basemaps[["region"]] <-  geojson_read("./phl-admin-psgc-master/phl_regions.geojson", what="sp") %>%
st_as_sf()
basemaps[["province"]] <-  geojson_read("./phl-admin-psgc-master/phl_provinces_ncr-districts_icc.geojson", what="sp") %>%
st_as_sf()
basemaps[["municity"]] <-  geojson_read("./phl-admin-psgc-master/phl_municities.geojson", what="sp") %>%
st_as_sf()
leaflet(basemaps$region)
leaflet(basemaps$region) %>%
setView(lat = 12.8797, lng = 121.774, zoom=6)
leaflet(basemaps$region) %>%
addTiles() %>%
setView(lat = 12.8797, lng = 121.774, zoom=6)
maodata <- basemaps$region %>%
left_join(data1$region %>%
filter(farm_type=="All ecosystem"),
by= c("psgc_region"="psgc.reg"))
View(maodata)
str(maodata)
bpal <- colorBin(palette = c("firebrick4","#E69F00","#F0E442","#117733","#56B4E9"),
bins = c(0, 50000,150000,300000,450000,Inf),
domain = maodata$area,
na.color = "transparent",
alpha=0.5)
View(bpal)
leaflet() %>%
addTiles() %>%
addPolygons(layerId = "area",
maodata,
stroke=TRUE,
fillOpacity = 0.9,
fillColor = ~bpal(area),
color='white',
weight=0.5,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group="area"
)
leaflet() %>%
addTiles() %>%
addPolygons(layerId = "area",
maodata,
stroke=TRUE,
fillOpacity = 0.9,
fillColor = ~bpal(area),
color='white',
weight=0.5,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group="area"
)
leaflet(maodata) %>%
addTiles() %>%
addPolygons(layerId = "area",
stroke=TRUE,
fillOpacity = 0.9,
fillColor = ~bpal(area),
color='white',
weight=0.5,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group="area"
)
maodata$area
leaflet(maodata) %>%
addTiles() %>%
addPolygons(layerId = "area",
stroke=TRUE,
fillOpacity = 0.9,
fillColor = ~bpal(area),
color='white',
weight=0.5,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
View(maodata[[9]][[3]])
View(data1)
View(data1[["region"]])
leaflet(maodata) %>%
addTiles() %>%
addPolygons(layerId = "area",
stroke=TRUE,
fillOpacity = 0.9,
fillColor = ~bpal(area),
color='white',
weight=0.5,
dashArray = "Null",
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
leaflet(maodata) %>%
addTiles() %>%
addPolygons(layerId = "area",
stroke=TRUE,
fillOpacity = 0.9,
fillColor = ~bpal(area),
color='white',
weight=0.5,
dashArray = NULL,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
ggplot(maodata) %>% geom_sf(area)
ggplot(maodata) +geom_sf(area)
colnames(maodata)
ggplot(maodata) +geom_sf(aes(x=area))
str('paodata')
str(maodata)
runApp()
a <- read.xlsx("a.xlsx",sheet=1) %>%
select(vars("a")) %>%
filter(dep = "Agriculture")
a <- read.xlsx("a.xlsx",sheet=1) %>%
select(vars("a")) %>%
filter(dep = "Agriculture")b
View(maodata)
str(maodata)
leaflet(maodata) %>%
addTiles() %>%
addPolygons(layerId = "area",
stroke=TRUE,
fillOpacity = 0.9,
fillColor = ~bpal(area),
color='white',
weight=0.5)
data1$region %>%
filter(farm_type=="All ecosystem")
leaflet(maodata) %>%
addTiles() %>%
addPolygons(fillColor="red")
leaflet(maodata) %>%
addTiles() %>%
addPolygons(fillColor="red",
label=~region)
leaflet(maodata) %>%
addTiles() %>%
addPolygons(fillColor="red",
label=~area)
numpal <-  reactive({
colorNumeric(palette ="RdYlGn",
domain = maodata$area,
na.color = "transparent",
alpha=0.5)
})
numpal <-  reactive({
colorNumeric(palette ="RdYlGn",
domain = maodata$area,
na.color = "transparent",
alpha=0.5)
})
leaflet(maodata) %>%
addTiles() %>%
addPolygons(fillColor=~numpal(area),
dashArray = NULL,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
leaflet(maodata) %>%
addTiles() %>%
addPolygons( stroke=TRUE,
fillOpacity = 0.9,
fillColor=~numpal(area),
dashArray = NULL,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
leaflet(maodata) %>%
addTiles() %>%
addPolygons( stroke=TRUE,
fillOpacity = 0.9,
fillColor=~area,
dashArray = NULL,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
leaflet(maodata) %>%
addTiles() %>%
addPolygons( stroke=TRUE,
fillOpacity = 0.9,
fillColor=~bpal(area),
dashArray = NULL,
label = ~region,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
)
)
runApp()
View(basemaps)
View(maodata)
library(shiny)
library(shinythemes)
library(geojsonio)
library(openxlsx)
library(tidyverse)
library(googledrive)
library(plotly)
library(stringdist)
library(fuzzyjoin)
library(leaflet)
library(htmltools)
library(shinyWidgets)
library(sf)
library(ggridges)
library(DT)
library(leaflet.extras2)
runApp()
write.xlsx(data1,"data.xlsx")
runApp()
write_csv2(data1$region,"region.csv")
write_csv2(data1$province,"province.csv")
write_csv2(data1$municity,"municity.csv")
write_csv2(data1$brgy,"brgy.csv")
write_csv(data1$municity,"municity.csv")
write_csv(data1$province,"province.csv")
write_csv(data1$province,"province.csv")
write_csv(data1$region,region.csv)
write_csv(data1$region,"region.csv")
write_csv(data1$brgy,"brgy.csv")
View(data1)
View(data1[["region"]])
names(data1)
for (i in data1) {
head(i)
}
print(i)
for (i in names(data1)) {
print(data1$i)
}
for (i in names(data1)) {
print(data1[[i]])
}
?pivot_wider
for (i in names(data1)) {
data[[i]] %>%
pivot_wider(names_from = farm_type,
values_from = c(parcelno,farmerno,area),
names_glue = "{farm_type}_{.value}") %>%
write_csv(paste0(i,"_v2.csv"))
}
data[i]%>%
pivot_wider(names_from = farm_type,
values_from = c(parcelno,farmerno,area),
names_glue = "{farm_type}_{.value}") %>%
write_csv(paste0(i,"_v2.csv"))
data$i%>%
pivot_wider(names_from = farm_type,
values_from = c(parcelno,farmerno,area),
names_glue = "{farm_type}_{.value}") %>%
write_csv(paste0(i,"_v2.csv"))
data[[i]] %>%
ungroup() %>%
pivot_wider(names_from = farm_type,
values_from = c(parcelno,farmerno,area),
names_glue = "{farm_type}_{.value}") %>%
write_csv(paste0(i,"_v2.csv"))
for (i in names(data1)) {
data[[i]] %>%
print()
}
for (i in names(data1)) {
data1[[i]] %>%
ungroup() %>%
pivot_wider(names_from = farm_type,
values_from = c(parcelno,farmerno,area),
names_glue = "{farm_type}_{.value}") %>%
write_csv(paste0(i,"_v2.csv"))
}
?downloadHandler
Sys.Date()
?Sys.Date()
icon("download")
?downloadLink
icon("download")
runApp()
?datatable
runApp()
